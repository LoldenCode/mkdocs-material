{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hello, World","text":"<p>I'm attempting to give back to the community with a series of guides to help through potentially sticky processes. Feel free to reach out if you have any questions or suggestions!</p>"},{"location":"#about-this-page","title":"About this page","text":"<p>I've seen a lot of community utilizing various KB systems as of recent, which is awesome! I haven't seen MkDocs used much, if at all, so I figure knocking out two birds with one stone will be the move here. If interested in configuring this yourself, let me know - or, if this seems clunky, let me know even louder.</p>"},{"location":"CIPP/","title":"\u2705 CIPP installation (As of April 30, 2024)","text":""},{"location":"CIPP/#prerequisites","title":"Prerequisites","text":"<ul> <li>A GitHub account</li> <li>A Microsoft 365 tenant</li> <li>30 minutes, roughly</li> </ul>"},{"location":"CIPP/#getting-started","title":"Getting Started","text":"<ol> <li> <p>Ensuring that you're logged into GitHub, navigate to the two following pages and fork both to repositories that retain the original name. </p> </li> <li> <p>https://github.com/KelvinTegelaar/CIPP</p> </li> <li>https://github.com/KelvinTegelaar/CIPP-API</li> </ol> <p>To Fork a GitHub repo, in the top right, click on the Fork button</p> <ol> <li>Again, ensure that the Repository name field matches the originals (CIPP and CIPP-API, respectively). Keep the box for <code>Copy the master branch only</code> checked, then click <code>Create Fork</code></li> <li>Create a Token in GitHub. This will allow you to link the repo to your Azure, and allow the automation to work seamlessly </li> <li>Click on your user icon in the top right.</li> <li>Navigate to Settings</li> <li>Navigate to Developer Settings</li> <li>Expand Personal Access Tokens then choose Tokens (classic)</li> <li>Click Generate new token &gt; Generate new token (classic)</li> <li>Name your new token something memorable, then check the permissions for repo, workflow, and write:packages. You should have a result similar to this (note that repo has unchecked itself, because...programming or something):       </li> <li>If all looks good, click on Generate token at the bottom of the page. Document the token value in a secure location.</li> </ol>"},{"location":"CIPP/#deploy-the-static-web-app","title":"Deploy the Static Web App","text":"<ol> <li>Ensuring you're logged into a Microsoft 365 account with access to both an active Azure Subscription and an Azure Resource Group, proceed to the following link:\\    https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FKelvinTegelaar%2FCIPP%2Fdev%2Fdeployment%2FAzureDeploymentTemplate.json</li> <li>Select your Subscription and Resource Group. </li> <li>While not necessary, I prefer to have a separate Resource Group for CIPP.</li> <li>Select the nearest region that supports Static Web Apps (SWA's). As of time of writing, these are the supported options:\\</li> <li>Central US</li> <li>East US 2</li> <li>East Asia</li> <li>West Europe</li> <li>West US 2</li> <li>Update the Github Repository, GitHub Token, and GitHub API Repository with details that reflect your environment. You should end up with a page looking similar to this:\\    </li> <li>Click Review + create at the bottom. Confirm all looks good on the Review page, click Okay.</li> <li>You should be at your deployment page now:        At this point, wait until the blue bar beneath the bell in the top right finishes doing nerdy stuff. Grab yourself a tea or something, the hard part is over.</li> <li>Once back from your tea break, you should be shown a screen as follows:    </li> <li>Click on the Resource Group, then navigate to your Static Web App </li> <li>Under Settings on the left pane, navigate to Role management.</li> <li>Select Invite User, then input your user's Email Address, and input <code>admin</code> as the role. Generate the invitation link, and head on in. Grant Consent when requested, and you should be redirected to your new CIPP instance.</li> </ol>"},{"location":"CIPP/#post-install-configuration","title":"Post Install configuration","text":"<ol> <li>Repeat the invitation process for any other technicians that you are inviting for your testing phase of CIPP, or other IT team members if deploying for an internal organization.</li> <li>From your Azure page, navigate back to the main Resource Group, and click into your Function app.</li> <li>Navigate to Functions &gt; Settings &gt; Configuration.</li> <li>Add a New application setting at the top of this page, named <code>WEBSITE_RUN_FROM_PACKAGE</code> with a value of <code>1</code>. Click ok, then Save at the top of the prior page.</li> <li>Navigate to Functions &gt; Deployment &gt; Deployment Center</li> <li>Under the source External git, click Disconnect then confirm.</li> <li>The page should refresh, with a required field for Source. Choose Github, then click Authorize.</li> <li>Select the Organization, Repo, and Branch that reflect your Fork of CIPP-API. Scroll down, ensuring that Add a workflow and Basic authentication are checked. Finally, click Save at the top.</li> <li>Navigate to the main Overview page of the function app, then click on Restart in the top pane to f finalize the changes.</li> <li>Follow the steps https://docs.cipp.app/setup/installation/samwizard to create the SAM for your clients, or wait for me to write the rest of this.</li> <li>After building your SAM, and having your GDAP relationships set up, navigate to SETTINGS &gt; CIPP &gt; Application Settings &gt; Tenants</li> <li>Check the pickbox to select all clients, then choose the option to perform a CPV refresh. This will consent them to your SAM application.</li> <li>Enjoy!</li> </ol>"},{"location":"CIPP/#automatic-updates","title":"Automatic Updates","text":"<ol> <li>Browse to https://github.com/apps/pull and click \"install\".</li> <li>Choose the organization (if applicable), then Only select repositories, and choose both your CIPP and CIPP-API. Click Install</li> <li>Navigate to your CIPP repository on GitHub, then browse to the folder <code>.Github\\Workflows</code>. Locate the file named <code>AZURE_STATIC_WEB_APPS_API_TOKEN_&lt;WORD&gt;_&lt;WORD&gt;_&lt;UUID&gt;.yml</code></li> <li>Open this file, then click the Edit icon in the rop right. Around the 7th line, there will be a code block like such:</li> </ol> <pre><code>pull_request:\n  types: [opened, synchronize, reopened, closed]\n  branches:\n    - main\n</code></pre> <ol> <li>Remove these lines, then click Commit changes... in the top right. Leave everything in the popup window as it is, with the radio button on Commit directly to the `main` branch selected. Click on Commit changes.</li> <li>Wait for the next release of CIPP (Typically every other Friday, but there are some dev sprints that run a little longer). CIPP will warn you of an update, so log back into your GitHub and go to your CIPP repo.</li> <li>Click on Sync fork, then Update Branch</li> <li>NOTE: DO NOT CHOOSE THE \"Do you want to Discard # Commits\"</li> <li>On your GitHub page, you will have a new Pull Request. Click on the \"Run Workflow\" button, then \"Merge\". Moving forward, your repo will automatically update</li> </ol>"},{"location":"CIPP/#todo","title":"Todo","text":"<ul> <li>Document the next two possible pathways:</li> <li>Setting up the SAM service account</li> <li>Configuring CIPP to function on your own tenant</li> <li>Grab screenshots of the autoupdate configuration.</li> </ul> <p>Warning</p> <p>Please be smart and set up a separate CIPP tenant if you intend to manage your parent tenant.</p>"},{"location":"Rewst/","title":"Page 2","text":""},{"location":"Rewst/#subheader","title":"Subheader","text":"<p>Lorem ipsum</p>"}]}